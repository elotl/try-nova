apiVersion: policy.elotl.co/v1alpha1
kind: SchedulePolicy
metadata:
  name: psql-all-clusters
spec:
  namespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: psql-operator
  groupBy:
    labelKey: psql-cluster
  clusterSelector:
    matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: In
        values:
          - ${NOVA_WORKLOAD_CLUSTER_1}
          - ${NOVA_WORKLOAD_CLUSTER_2}
  spreadConstraints:
    spreadMode: Duplicate
    topologyKey: kubernetes.io/metadata.name
  resourceSelectors:
    labelSelectors:
      - matchLabels:
          psql-cluster: all
---
apiVersion: policy.elotl.co/v1alpha1
kind: SchedulePolicy
metadata:
  name: psql-cluster-1
spec:
  namespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: psql-operator
  clusterSelector:
    matchLabels:
      kubernetes.io/metadata.name: ${NOVA_WORKLOAD_CLUSTER_1}
  resourceSelectors:
    labelSelectors:
      - matchLabels:
          psql-cluster: cluster-1
---
apiVersion: policy.elotl.co/v1alpha1
kind: SchedulePolicy
metadata:
  name: psql-cluster-2
spec:
  namespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: psql-operator
  clusterSelector:
    matchLabels:
      kubernetes.io/metadata.name: ${NOVA_WORKLOAD_CLUSTER_2}
  resourceSelectors:
    labelSelectors:
      - matchLabels:
          psql-cluster: cluster-2
---
apiVersion: policy.elotl.co/v1alpha1
kind: SchedulePolicy
metadata:
  name: ha-proxy-cluster
spec:
  namespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: default
  clusterSelector:
    matchLabels:
      # this policy schedules HAProxy, which should be placed on a separate cluster than Percona clusters
      # for simplicity of the setup it's placed on the same cluster as the standby Percona cluster
      kubernetes.io/metadata.name: ${NOVA_WORKLOAD_CLUSTER_2}  
  resourceSelectors:
    labelSelectors:
      - matchLabels:
          cluster: cluster-ha-proxy
