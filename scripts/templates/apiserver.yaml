apiVersion: apps/v1
kind: Deployment
metadata:
  name: apiserver
  namespace: ${NAMESPACE}
  labels:
    component: apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      component: apiserver
  template:
    metadata:
      labels:
        component: apiserver
    spec:
      containers:
        - name: apiserver
          image: registry.k8s.io/kube-apiserver:v1.21.7
          command:
            - kube-apiserver
            # - --allow-privileged=true
            - --authorization-mode=RBAC
            - --client-ca-file=/etc/kubernetes/pki/ca.crt
            - --enable-admission-plugins=NodeRestriction
            - --enable-bootstrap-token-auth=true
            - --etcd-cafile=/etc/etcd/pki/ca.crt
            - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
            - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
            - --etcd-servers=https://etcd-client.${NAMESPACE}.svc.cluster.local:2379
            - --insecure-port=0
            - --disable-admission-plugins=StorageObjectInUseProtection,ServiceAccount
            - --runtime-config=
            - --secure-port=6443
            - --service-account-issuer=https://apiserver.${NAMESPACE}.svc.cluster.local
            - --service-account-key-file=/etc/kubernetes/pki/sa.key
            - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
            - --service-cluster-ip-range=10.96.0.0/16
            - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
            - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
            - --requestheader-allowed-names=front-proxy-client
            - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
            - --requestheader-extra-headers-prefix=X-Remote-Extra-
            - --requestheader-group-headers=X-Remote-Group
            - --requestheader-username-headers=X-Remote-User
            - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
            - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
            - --v=3
          ports:
            - name: http
              containerPort: 6443
              protocol: TCP
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 6443
              scheme: HTTPS
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 15
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: nova-cert
              mountPath: /etc/kubernetes/pki
              readOnly: true
            - name: etcd-cert
              mountPath: /etc/etcd/pki
              readOnly: true
      preemptionPolicy: PreemptLowerPriority
      # priority: 2000001000
      # priorityClassName: system-node-critical, GKE doesn't like system-node-critical pods in non kube-system namespace
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - name: nova-cert
          secret:
            secretName: nova-cert
        - name: etcd-cert
          secret:
            secretName: etcd-cert
